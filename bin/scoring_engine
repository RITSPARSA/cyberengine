#!/usr/bin/env ruby
$:.unshift File.join(File.dirname(__FILE__), '..', 'lib')

require 'scoring_engine'
require 'scoring_engine/engine'

require 'ostruct'
require 'optparse'

options = OpenStruct.new
opts = OptionParser.new()
opts.banner = "Usage: #{$0}"
opts.on("-v", "Boolean to turn on verbosity") do
  options.verbosity = true
end
opts.on_tail("-h", "--help", "Show this message") do
  puts opts
  exit
end
opts.parse!

ScoringEngine::Logger.level = Logger::INFO
ScoringEngine::Logger.level = Logger::DEBUG if options.verbosity

@machine = ScoringEngine::Engine::Machine.new(ScoringEngine.checks_dir)

options_hash = {
  "list" => lambda{@machine.log_check_status},
  "run" => lambda{@machine.start},
  "test" => lambda{@machine.start(true)},
}

Signal.trap("TRAP") do
  raise ScoringEngine::Engine::Exceptions::TerminateEngine
end

Signal.trap("INT") do
  Thread.new do
    ScoringEngine::Logger.info("Ctr-c received...triggering last round. (Round #{@machine.round})")
    @machine.last_round
  end
end

unless opts.default_argv.empty?
  command = opts.default_argv.first
  options_hash[command].call
else
  ScoringEngine::Logger.error("No command passed. Possible options are #{options_hash.keys}")
  exit 1
end
